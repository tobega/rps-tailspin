use 'http' with
  'java:io.undertow' stand-alone
  'java:io.undertow.server' stand-alone
  'java:io.undertow.util' stand-alone
provided

include 'rps'

def rpsService: $rps/GameService;

templates convertRpsResult
  when <=''> do {statusCode: 404, body: ''} !
  when <'.*'> do {statusCode: 400, body: $} !
  otherwise {statusCode: 200, body: $ -> json/serialize} !
end convertRpsResult

composer toInt
  <INT>
end toInt

processor CreateGameHandler
  templates handleRequest
    $.body -> json/parse -> rpsService::createGame -> convertRpsResult !
  end handleRequest
end CreateGameHandler

processor GetGameStatusHandler
  templates handleRequest
    def id: $.parameters... -> \(<{key: <='id'>}> $.value(1) !\) -> toInt;
    $rpsService::getStatus&{id: $id} -> convertRpsResult !
  end handleRequest
end GetGameStatusHandler

processor UpdateGameHandler
  templates handleRequest
  def id: $.parameters... -> \(<{key: <='id'>}> $.value(1) !\) -> toInt;
  $.body -> json/parse -> rpsService::updateGame&{id: $id} -> convertRpsResult !
  end handleRequest
end UpdateGameHandler

[{post: '/games', handler: $CreateGameHandler},
  {post: '/games/', handler: $CreateGameHandler},
  {get: '/games/{id}', handler: $GetGameStatusHandler},
  {post: '/games/{id}', handler: $UpdateGameHandler}
] -> !http/startServer&{port: 8080, name: 'localhost'}
